name: Verify and Release

on: [ push ]

env:
  LEFTHOOK: 0

jobs:
  build-push-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup/
        with:
          runs-on: ubuntu-latest

      - run: yarn build
      - run: yarn build:binaries

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: ignore
          name: Binaries
          path: dist/pkg/mmu*

  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup/
        with:
          runs-on: ubuntu-latest

      - run: yarn ci
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "reports/junit.xml"

      - run: npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  release:
    needs: [ verify ]
    if: needs.verify.outputs.new-release-published == 'true'
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup/
        with:
          runs-on: ubuntu-latest

      - name: Build & Release
        env:
          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
          MODRINTH_API_KEY: ${{ secrets.MODRINTH_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn release
